task 3.
<?php
    $a = 5;
    $b = '05';
    var_dump($a == $b);         // Почему true? // Так как одна из переменной является числом, а другая - строкой, то вторую переменную(строку) интерпретатор неявно привел к целочисленому типу данных. Но если строку нельзя перевести в число, то неявное преобразование вернет значение 0.
    var_dump((int)'012345');     // Почему 12345? // интерпретатор всегда переводит строку в целое число в десятичной системе счисления. Нули в начале числа убираются.
    var_dump((float)123.0 === (int)123.0); // Почему false? // оператор === сравнивает две переменных не только по значению, но и по типу данных.
    var_dump((int)0 === (int)'hello, world'); // Почему true? // так как интерпретатор не смог перевести строку в число, операция явного приведения типа вернула значение 0.
?>

task 4.
<?php
    $title = "test";
    $h1 = "Hello, world!";
    $currentYear = date('Y');
?>
<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title><?=$title?></title>
</head>
<body>
<h1>
    <?=$h1?>
</h1>
<p>
    <?=$currentYear?>
</p>
</body>
</html>

task 5.
<?php
    $a = 1;
    $b = 2;
    echo "a = $a, b = $b <br>";
    [$a, $b] = [$b, $a];
    echo "a = $a, b = $b <br>";
?>